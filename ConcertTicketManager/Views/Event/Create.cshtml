@model EventViewModel

@{
    ViewData["Title"] = "Create Event";
}

<h1>Create Event</h1>

<form asp-action="Create" method="post">
    <div asp-validation-summary="All" class="text-danger"></div>

    <div class="form-group">
        <label asp-for="Name"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Date"></label>
        <input asp-for="Date" type="datetime-local" class="form-control" />
        <span asp-validation-for="Date" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Description"></label>
        <textarea asp-for="Description" class="form-control"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="VenueId"></label>
        <select asp-for="VenueId" asp-items="Model.Venues" class="form-control"></select>
        <span asp-validation-for="VenueId" class="text-danger"></span>
    </div>

    <h4>Ticket Types</h4>
    <div id="ticketTypes">
        @for (int i = 0; i < Model.TicketTypes.Count; i++)
        {
            <div class="ticket-type border p-3 mb-3">
                <div class="form-group">
                    <label asp-for="@Model.TicketTypes[i].Type"></label>
                    <input asp-for="@Model.TicketTypes[i].Type" class="form-control" />
                    <span asp-validation-for="@Model.TicketTypes[i].Type" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="@Model.TicketTypes[i].Price"></label>
                    <input asp-for="@Model.TicketTypes[i].Price" class="form-control" />
                    <span asp-validation-for="@Model.TicketTypes[i].Price" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="@Model.TicketTypes[i].Capacity"></label>
                    <input asp-for="@Model.TicketTypes[i].Capacity" class="form-control" />
                    <span asp-validation-for="@Model.TicketTypes[i].Capacity" class="text-danger"></span>
                </div>

                <button type="button" class="btn btn-danger btn-sm remove-ticket-type">Remove</button>
            </div>
        }
    </div>

    <div class="d-flex gap-2 mb-3">
        <button type="button" class="btn btn-secondary" id="addTicketType">
            <i class="bi bi-plus-circle me-1"></i> Add Ticket Type
        </button>
        <button type="submit" class="btn btn-primary">
            <i class="bi bi-check-circle me-1"></i> Create
        </button>
    </div>

</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        let ticketTypeIndex = @Model.TicketTypes.Count;

        const ticketTypeTemplate = () => `
        <div class="ticket-type border p-3 mb-3">
            <div class="form-group">
                <label for="TicketTypes_${ticketTypeIndex}__Type">Type</label>
                <input class="form-control" type="text" name="TicketTypes[${ticketTypeIndex}].Type" id="TicketTypes_${ticketTypeIndex}__Type" />
            </div>
            <div class="form-group">
                <label for="TicketTypes_${ticketTypeIndex}__Price">Price</label>
                <input class="form-control" type="number" step="0.01" name="TicketTypes[${ticketTypeIndex}].Price" id="TicketTypes_${ticketTypeIndex}__Price" />
            </div>
            <div class="form-group">
                <label for="TicketTypes_${ticketTypeIndex}__Capacity">Capacity</label>
                <input class="form-control" type="number" name="TicketTypes[${ticketTypeIndex}].Capacity" id="TicketTypes_${ticketTypeIndex}__Capacity" />
            </div>
            <button type="button" class="btn btn-danger btn-sm remove-ticket-type">Remove</button>
        </div>
        `;

        document.getElementById("addTicketType").addEventListener("click", function () {
            const container = document.getElementById("ticketTypes");
            container.insertAdjacentHTML("beforeend", ticketTypeTemplate());
            ticketTypeIndex++;
        });

        document.getElementById("ticketTypes").addEventListener("click", function (e) {
            if (e.target && e.target.classList.contains("remove-ticket-type")) {
                e.target.closest(".ticket-type").remove();
            }
        });
    </script>
}

